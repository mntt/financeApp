<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>